<ResourceDictionary 
    x:Class="AppFramework.UI.Resources.Common" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:AppFramework.UI.Controls"
    xmlns:converters="using:AppFramework.UI.Converters"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:AppFramework.UI.Behaviors">

    <!--Converters-->
    <converters:StringLowerCasingConverter x:Key="lowerCasingConverter" />
    <converters:StringUpperCasingConverter x:Key="upperCasingConverter" />
    <converters:StringFormatConverter x:Key="stringFormatConverter" />
    <converters:ValueToBooleanConverter x:Key="boolConverter" />
    <converters:ValueToBooleanConverter x:Key="boolInvertedConverter" InvertValue="True" />
    <converters:ValueToStyleConverter x:Key="styleConverter" />
    <converters:ValueToVisibilityConverter x:Key="visConverter" />
    <converters:ValueToVisibilityConverter x:Key="visInvertedConverter" InvertValue="True" />
    <converters:ValueToOpacityConverter x:Key="opacityConverter" />
    <converters:ValueToDoubleConverter x:Key="doubleConverter" />
    <converters:ValueMatchToBooleanConverter x:Key="valueMatchBoolConverter" />
    <converters:ValueMatchToBooleanConverter x:Key="valueMatchBoolInvertedConverter" InvertValue="True" />
    <converters:ValueMatchToVisibilityConverter x:Key="valueMatchVisConverter" />
    <converters:ValueMatchToVisibilityConverter x:Key="valueMatchVisInvertedConverter" InvertValue="True" />
    <converters:ValueToThicknessConverter x:Key="isMenuHiddenConverter" TrueValue="48,0,0,0" FalseValue="0" />

    <!--Snap points for responsive design-->
    <x:Double x:Key="SnapPoint27">2560</x:Double>
    <x:Double x:Key="SnapPoint23">1920</x:Double>
    <x:Double x:Key="SnapPoint13">1366</x:Double>
    <x:Double x:Key="SnapPoint8Landscape">1024</x:Double>
    <x:Double x:Key="SnapPoint8Portrait">640</x:Double>
    <x:Double x:Key="SnapPointMinimum">0</x:Double>

    <GridLength x:Key="StandardElementGridLength">48</GridLength>

    <Style x:Key="StatusTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
        <Setter Property="Margin" Value="12,0" />
        <Setter Property="Opacity" Value=".7" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>
    <Style x:Key="ViewHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Margin" Value="12,8,8,8" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="NoWrap" />
    </Style>
    <Style x:Key="ViewHeaderStatusTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ViewHeaderTextBlockStyle}">
        <Setter Property="Margin" Value="12,2,12,0" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Opacity" Value=".7" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>
    <Style x:Key="TransparentButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                         Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                         Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                         Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                         Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                         Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SplitViewButton -->
    <Style TargetType="controls:SplitViewButton">
        <Setter Property="Height" Value="48" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:SplitViewButton">
                    <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{StaticResource StandardElementGridLength}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="bgNormal">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="bgNormal">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="symbol">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="bgChecked">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="bgNormal" Grid.ColumnSpan="2" Opacity="1" />
                        <SymbolIcon x:Name="symbol" Symbol="{TemplateBinding Symbol}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{TemplateBinding SymbolVisibility}" />
                        <Border Child="{TemplateBinding Icon}" />
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="12,0" TextWrapping="NoWrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="bgChecked" Grid.ColumnSpan="2" Opacity="0" Fill="{ThemeResource SystemAccentColor}" Width="4" HorizontalAlignment="Left" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Pivots-->
    <Style x:Key="StylizedPivot" TargetType="Pivot">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Margin="0" Style="{StaticResource ViewHeaderTextBlockStyle}" FontWeight="Medium" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Pivot">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.Resources>
                            <Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
                                <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="FontSize" Value="15"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ContentControl">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" OpticalMarginAlignment="TrimSideBearings" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="TitleContentControlStyle" BasedOn="{StaticResource BaseContentControlStyle}" TargetType="ContentControl">
                                <Setter Property="FontFamily" Value="{ThemeResource PivotTitleFontFamily}"/>
                                <Setter Property="FontWeight" Value="{ThemeResource PivotTitleThemeFontWeight}"/>
                                <Setter Property="FontSize" Value="{ThemeResource PivotTitleFontSize}"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Orientation">
                                <VisualState x:Name="Portrait">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Landscape">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationButtonsVisibility">
                                <VisualState x:Name="NavigationButtonsHidden"/>
                                <VisualState x:Name="NavigationButtonsVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NextButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="NextButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PreviousButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PreviousButton">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderStates">
                                <VisualState x:Name="HeaderDynamic"/>
                                <VisualState x:Name="HeaderStatic">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="StaticHeader">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="TitleContentControl" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" IsTabStop="False" Margin="{StaticResource PivotPortraitThemePadding}" Style="{StaticResource TitleContentControlStyle}" Visibility="Collapsed"/>
                        <Grid Grid.Row="1">
                            <Grid.Resources>
                                <ControlTemplate x:Key="NextTemplate" TargetType="Button">
                                    <Border x:Name="Root" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <FontIcon x:Name="Arrow" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E3;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                                <ControlTemplate x:Key="PreviousTemplate" TargetType="Button">
                                    <Border x:Name="Root" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <FontIcon x:Name="Arrow" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E2;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Grid.Resources>
                            <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="False" HorizontalSnapPointsAlignment="Center" HorizontalSnapPointsType="MandatorySingle" HorizontalScrollBarVisibility="Hidden" Margin="{TemplateBinding Padding}" Template="{StaticResource ScrollViewerScrollBarlessTemplate}" VerticalSnapPointsType="None" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled" VerticalContentAlignment="Stretch" ZoomMode="Disabled">
                                <PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
                                    <Grid x:Name="PivotLayoutElement" Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.RenderTransform>
                                            <CompositeTransform x:Name="PivotLayoutElementTranslateTransform"/>
                                        </Grid.RenderTransform>
                                        <ContentPresenter x:Name="LeftHeaderPresenter" ContentTemplate="{TemplateBinding LeftHeaderTemplate}" Content="{TemplateBinding LeftHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                        <ContentControl x:Name="HeaderClipper" Grid.Column="1" HorizontalContentAlignment="Stretch" UseSystemFocusVisuals="True">
                                            <ContentControl.Clip>
                                                <RectangleGeometry x:Name="HeaderClipperGeometry"/>
                                            </ContentControl.Clip>
                                            <Grid Background="Transparent" Height="{StaticResource StandardElementPixels}">
                                                <PivotHeaderPanel x:Name="StaticHeader" Visibility="Collapsed"/>
                                                <PivotHeaderPanel x:Name="Header">
                                                    <PivotHeaderPanel.RenderTransform>
                                                        <TransformGroup>
                                                            <CompositeTransform x:Name="HeaderTranslateTransform"/>
                                                            <CompositeTransform x:Name="HeaderOffsetTranslateTransform"/>
                                                        </TransformGroup>
                                                    </PivotHeaderPanel.RenderTransform>
                                                </PivotHeaderPanel>
                                            </Grid>
                                        </ContentControl>
                                        <Button x:Name="PreviousButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="36" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource PreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                        <Button x:Name="NextButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" Height="36" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource NextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                        <ContentPresenter x:Name="RightHeaderPresenter" ContentTemplate="{TemplateBinding RightHeaderTemplate}" Content="{TemplateBinding RightHeader}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                        <Grid Grid.ColumnSpan="3" Grid.Row="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                                            <ItemsPresenter x:Name="PivotItemPresenter">
                                                <ItemsPresenter.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
                                                        <CompositeTransform x:Name="ItemsPresenterCompositeTransform"/>
                                                    </TransformGroup>
                                                </ItemsPresenter.RenderTransform>
                                            </ItemsPresenter>
                                        </Grid>
                                    </Grid>
                                </PivotPanel>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:Pivot" BasedOn="{StaticResource StylizedPivot}" />

    <!--List/Grid Styles-->
    <Style TargetType="ListView">
        <Setter Property="IsSwipeEnabled" Value="False" />
        <Setter Property="IsItemClickEnabled" Value="True" />
        <Setter Property="SelectionMode" Value="None" />
    </Style>
    <Style TargetType="GridView">
        <Setter Property="IsSwipeEnabled" Value="False" />
        <Setter Property="IsItemClickEnabled" Value="True" />
        <Setter Property="SelectionMode" Value="None" />
    </Style>
    <Style TargetType="toolkit:AdaptiveGridView">
        <Setter Property="IsSwipeEnabled" Value="False" />
        <Setter Property="IsItemClickEnabled" Value="True" />
        <Setter Property="SelectionMode" Value="None" />
    </Style>

    <!--Pull To Refresh-->
    <x:Double x:Key="PullToRefreshPullThreshold">100</x:Double>
    <Style TargetType="toolkit:PullToRefreshListView">
        <Setter Property="IsSwipeEnabled" Value="False" />
        <Setter Property="IsItemClickEnabled" Value="True" />
        <Setter Property="SelectionMode" Value="None" />
        <Setter Property="PullThreshold" Value="{StaticResource PullToRefreshPullThreshold}" />
    </Style>
    <Style TargetType="controls:PullToRefreshListView">
        <Setter Property="NoDataMessageStyle" Value="{StaticResource StatusTextBlockStyle}" />
        <Setter Property="IsItemClickEnabled" Value="True" />
        <Setter Property="IsSwipeEnabled" Value="False" />
        <Setter Property="SelectionMode" Value="None" />
        <Setter Property="PullThreshold" Value="{StaticResource PullToRefreshPullThreshold}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PullToRefreshListView">
                    <Grid x:Name="root" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <toolkit:PullToRefreshListView 
                            x:Name="listview"
                            Style="{TemplateBinding ListViewStyle}" 
                            ItemsSource="{TemplateBinding ItemsSource}" 
                            ItemTemplate="{TemplateBinding ListViewItemTemplate}"
                            ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                            Header="{TemplateBinding Header}"
                            HeaderTemplate="{TemplateBinding HeaderTemplate}"
                            Footer="{TemplateBinding Footer}"
                            FooterTemplate="{TemplateBinding FooterTemplate}"
                            IsItemClickEnabled="{TemplateBinding IsItemClickEnabled}"
                            IsSwipeEnabled="{TemplateBinding IsSwipeEnabled}"
                            SelectionMode="{TemplateBinding SelectionMode}"
                            RefreshCommand="{TemplateBinding RefreshCommand}"
                            PullThreshold="{TemplateBinding PullThreshold}"
                            behaviors:ListViewCommandBehavior.Command="{TemplateBinding ClickCommand}">
                            <toolkit:PullToRefreshListView.PullToRefreshContent>
                                <TextBlock Text="Pull to refresh" Style="{StaticResource SubtleTextBlockStyle}" />
                                <!--TODO x:Uid="/AppFramework.Core.Uwp/Resources/txtPullToRefresh"-->
                            </toolkit:PullToRefreshListView.PullToRefreshContent>
                            <toolkit:PullToRefreshListView.ReleaseToRefreshContent>
                                <TextBlock Text="Release to refresh" Style="{StaticResource SubtleTextBlockStyle}" />
                            </toolkit:PullToRefreshListView.ReleaseToRefreshContent>
                        </toolkit:PullToRefreshListView>
                        <TextBlock 
                            Text="{TemplateBinding NoDataMessage}" 
                            Style="{TemplateBinding NoDataMessageStyle}"
                            Visibility="{TemplateBinding NoDataMessageVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TaskPanel-->
    <Style TargetType="controls:TaskPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <StackPanel Margin="0,12,0,24" Visibility="{Binding IsFaulted, Mode=OneWay, Converter={StaticResource visConverter}, FallbackValue=Collapsed}">
                            <TextBlock Style="{StaticResource ErrorTextBlockStyle}" Text="[An expected error has occurred.]" />
                            <!--TODO x:Uid="/Contoso.Core/Resources/tbTryAgain"-->
                            <Button 
                                Style="{StaticResource PrimaryButtonStyle}"
                                IsEnabled="{Binding IsCompleted, Mode=OneWay}" Content="[Try again]" Click="btnTryAgain_Click" />
                            <!-- TODO x:Uid="/Contoso.Core/Resources/btnTryAgain"-->
                        </StackPanel>
                        <ProgressRing 
                            IsActive="{Binding IsNotCompleted, Mode=OneWay, FallbackValue=False}" 
                            IsEnabled="{Binding IsNotCompleted, Mode=OneWay, FallbackValue=False}" 
                            Visibility="{Binding IsNotCompleted, Mode=OneWay, Converter={StaticResource visConverter}, FallbackValue=Collapsed}" />
                        <ContentPresenter Visibility="{Binding HasResult, Mode=OneWay, Converter={StaticResource visConverter}, FallbackValue=Visible}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AdaptiveDataView-->
    <Style TargetType="controls:AdaptiveDataView">
        <Setter Property="GridViewItemContainerStyle" Value="{StaticResource AdaptiveGridViewItemStyle}" />
        <Setter Property="IsItemClickEnabled" Value="True" />
        <Setter Property="IsSwipeEnabled" Value="False" />
        <Setter Property="SelectionMode" Value="None" />
        <Setter Property="NoDataMessageStyle" Value="{StaticResource StatusTextBlockStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AdaptiveDataView">
                    <Grid x:Name="root" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="gridview.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPointMinimum}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="listview.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <toolkit:PullToRefreshListView 
                            x:Name="listview" 
                            Visibility="Collapsed" 
                            x:DeferLoadStrategy="Lazy"
                            Style="{TemplateBinding ListViewStyle}" 
                            ItemsSource="{TemplateBinding ItemsSource}" 
                            ItemTemplate="{TemplateBinding ListViewItemTemplate}"
                            ItemContainerStyle="{TemplateBinding ListViewItemContainerStyle}"
                            Header="{TemplateBinding Header}"
                            HeaderTemplate="{TemplateBinding HeaderTemplate}"
                            Footer="{TemplateBinding Footer}"
                            FooterTemplate="{TemplateBinding FooterTemplate}"
                            IsItemClickEnabled="{TemplateBinding IsItemClickEnabled}"
                            IsSwipeEnabled="{TemplateBinding IsSwipeEnabled}"
                            SelectionMode="{TemplateBinding SelectionMode}"
                            RefreshCommand="{TemplateBinding RefreshCommand}"
                            PullThreshold="{StaticResource PullToRefreshPullThreshold}"
                            behaviors:ListViewCommandBehavior.Command="{TemplateBinding ClickCommand}" />
                        <GridView 
                            x:Name="gridview" 
                            Visibility="Collapsed" 
                            x:DeferLoadStrategy="Lazy" 
                            Style="{TemplateBinding GridViewStyle}" 
                            ItemsSource="{TemplateBinding ItemsSource}" 
                            ItemTemplate="{TemplateBinding GridViewItemTemplate}"  
                            ItemContainerStyle="{TemplateBinding GridViewItemContainerStyle}"
                            Header="{TemplateBinding Header}"
                            HeaderTemplate="{TemplateBinding HeaderTemplate}"
                            Footer="{TemplateBinding Footer}"
                            FooterTemplate="{TemplateBinding FooterTemplate}"
                            IsItemClickEnabled="{TemplateBinding IsItemClickEnabled}"
                            IsSwipeEnabled="{TemplateBinding IsSwipeEnabled}"
                            SelectionMode="{TemplateBinding SelectionMode}"
                            behaviors:ListViewCommandBehavior.Command="{TemplateBinding ClickCommand}" />
                        <TextBlock 
                            Text="{TemplateBinding NoDataMessage}" 
                            Style="{TemplateBinding NoDataMessageStyle}"
                            Visibility="{TemplateBinding NoDataMessageVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BusyPanel-->
    <Style TargetType="controls:BusyPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:BusyPanel">
                    <Grid>
                        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity=".85" />
                        <StackPanel VerticalAlignment="Center" Margin="0,0,0,48">
                            <ProgressRing 
                                IsEnabled="{TemplateBinding IsActive}" 
                                IsActive="{TemplateBinding IsActive}" />
                            <TextBlock 
                                TextAlignment="Center" 
                                TextWrapping="Wrap" 
                                Margin="12,0" 
                                Text="{TemplateBinding StatusText}" 
                                Style="{TemplateBinding Style}" />
                            <Button
                                HorizontalAlignment="Center"
                                Content="{TemplateBinding CustomButtonText}" 
                                Command="{TemplateBinding CustomButtonCommand}"
                                Visibility="{TemplateBinding CustomButtonVisibility}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ApplicationFrame-->
    <Style TargetType="controls:ApplicationFrame">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ApplicationFrame">
                    <Grid>
                        <Border x:Name="ClientArea" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <controls:BusyPanel
                            IsActive="{Binding ViewModel.StatusIsBusy, Mode=OneWay}"
                            StatusText="{Binding ViewModel.StatusText, Mode=OneWay}"
                            StatusTextStyle="{StaticResource BodyTextBlockStyle}"
                            Visibility="{Binding ViewModel.StatusIsBlocking, Mode=OneWay, Converter={StaticResource visConverter}, FallbackValue=Collapsed}" 
                            CustomButtonCommand="{Binding ViewModel.StatusIsBlockingCancelableCommand, Mode=OneWay}"
                            CustomButtonVisibility="{Binding ViewModel.StatusIsBlockingCancelable, Mode=OneWay, Converter={StaticResource visConverter}}"
                            />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AdSupportedApplicationFrame-->
    <Style TargetType="controls:AdSupportedApplicationFrame">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:AdSupportedApplicationFrame">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="ClientArea" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <controls:BusyPanel
                            IsActive="{Binding ViewModel.StatusIsBusy, Mode=OneWay}"
                            StatusText="{Binding ViewModel.StatusText, Mode=OneWay}"
                            StatusTextStyle="{StaticResource BodyTextBlockStyle}"
                            Visibility="{Binding ViewModel.StatusIsBlocking, Mode=OneWay, Converter={StaticResource visConverter}, FallbackValue=Collapsed}" 
                            CustomButtonCommand="{Binding ViewModel.StatusIsBlockingCancelableCommand, Mode=OneWay}"
                            CustomButtonVisibility="{Binding ViewModel.StatusIsBlockingCancelable, Mode=OneWay, Converter={StaticResource visConverter}}"
                            />
                        <controls:AdControl Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BodyPanel-->
    <Style TargetType="controls:BodyPanel">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="HeaderForeground" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
        <Setter Property="HeaderBackground" Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
        <Setter Property="ContainerTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:BodyPanel">
                    <Grid Background="{TemplateBinding Background}">
                        <!-- Responsive VisualStates -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState>
                                    <!-- VisualState for 8" tablet portrait -->
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Portrait}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="appbar.(Grid.Row)" Value="0" />
                                        <Setter Target="appbar.(Grid.Column)" Value="0" />
                                        <Setter Target="appbar.(Grid.ColumnSpan)" Value="1" />
                                        <Setter Target="appbar.HorizontalContentAlignment" Value="Right" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource StandardElementGridLength}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Header Background-->
                        <Grid Grid.ColumnSpan="2" Background="{TemplateBinding HeaderBackground}" />

                        <!--Title-->
                        <Button
                            Margin="{Binding ViewModel.View.Frame.IsMenuHidden, Mode=OneWay, Converter={StaticResource isMenuHiddenConverter}}"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left" 
                            VerticalAlignment="Center" 
                            IsTabStop="False" 
                            Command="{Binding ViewModel.ViewScrollToTopCommand, Mode=OneWay}"
                            IsHitTestVisible="{TemplateBinding IsHeaderHitTestVisible}"
                            Style="{StaticResource TransparentButtonStyle}" >
                            <Grid>
                                <TextBlock 
                                    Visibility="{TemplateBinding HeaderTextVisibility}"
                                    Text="{Binding ViewModel.Title, Mode=OneWay, FallbackValue='N/A'}" 
                                    TextTrimming="CharacterEllipsis"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center" 
                                    Margin="12,0"  />
                                <ContentPresenter 
                                    Visibility="{TemplateBinding HeaderContentVisibility}"
                                    Content="{TemplateBinding HeaderContent}" />
                            </Grid>
                        </Button>
                        

                        <!--Body-->
                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                            <Grid.ChildrenTransitions>
                                <TransitionCollection>
                                    <EntranceThemeTransition/>
                                </TransitionCollection>
                            </Grid.ChildrenTransitions>
                            <controls:BodyPanelContainer x:Name="bodyPanelContainer" Template="{TemplateBinding ContainerTemplate}">
                                <ContentPresenter Content="{TemplateBinding BodyContent}" />
                            </controls:BodyPanelContainer>
                        </Grid>

                        <!--AppBar-->
                        <ContentControl 
                            x:Name="appbar" 
                            IsTabStop="False"
                            Grid.Row="2" Grid.ColumnSpan="2" 
                            Grid.RowSpan="2"
                            VerticalAlignment="Top"
                            Content="{TemplateBinding AppBar}"
                            HorizontalContentAlignment="Stretch" />

                        <!--Progress Bars-->
                        <Grid Grid.ColumnSpan="2" VerticalAlignment="Top">
                            <ProgressBar 
                                Visibility="{Binding ViewModel.StatusIsBusy, Converter={StaticResource visConverter}, Mode=OneWay, FallbackValue=Collapsed}"
                                IsIndeterminate="{Binding ViewModel.StatusIsBusy, Mode=OneWay, FallbackValue=False}" />
                            <ProgressBar 
                                Visibility="{Binding ViewModel.StatusProgressValue, Converter={StaticResource visConverter}, Mode=OneWay, FallbackValue=Collapsed}" 
                                Value="{Binding ViewModel.StatusProgressValue, Mode=OneWay, Converter={StaticResource doubleConverter}}" 
                                Minimum="0" Maximum="100" Opacity=".75" />
                        </Grid>

                        <!--StatusText-->
                        <StackPanel
                            VerticalAlignment="Top" 
                            Margin="{Binding ViewModel.View.Frame.IsMenuHidden, Mode=OneWay, Converter={StaticResource isMenuHiddenConverter}}"
                            Visibility="{Binding ViewModel.StatusIsBlocking, Converter={StaticResource visInvertedConverter}, FallbackValue=Collapsed, Mode=OneWay}">
                            <TextBlock 
                                Style="{StaticResource ViewHeaderStatusTextBlockStyle}" 
                                Text="{Binding ViewModel.StatusText, Mode=OneWay}" 
                                Visibility="{Binding ViewModel.StatusText, Mode=OneWay, Converter={StaticResource visConverter}}" />
                        </StackPanel>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>